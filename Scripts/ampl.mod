
param alpha ;
param nAssets ;
param nScenarios ;
param Mean{1..nAssets} ;
param targetReturn ;
param Data{1..nScenarios,1..nAssets} ;
var weights{1..nAssets} ;
var VaR ;
var z{1..nScenarios};
maximize Risk: VaR - ( sum{i in 1..nScenarios} z[i] ) / ( alpha  * nScenarios ) ;
subject to Return: sum{i in 1..nAssets} weights[i] * Mean[i] = targetReturn ;
subject to Weights{i in 1..nAssets}:  weights[i] >= 0 ;
subject to Budget: sum{i in 1..nAssets} weights[i] = 1 ;
subject to Scenarios{k in 1..nScenarios}: -VaR + z[k] + sum{i in 1..nAssets} Data[k,i]*weights[i] >= 0 ;
subject to Z{i in 1..nScenarios}:  z[i] >= 0 ;
param alpha ;
param nAssets ;
param nScenarios ;
param Mean{1..nAssets} ;
param targetReturn ;
param Data{1..nScenarios,1..nAssets} ;
var weights{1..nAssets} ;
var VaR ;
var z{1..nScenarios};
maximize Risk: VaR - ( sum{i in 1..nScenarios} z[i] ) / ( alpha  * nScenarios ) ;
subject to Return: sum{i in 1..nAssets} weights[i] * Mean[i] = targetReturn ;
subject to Weights{i in 1..nAssets}:  weights[i] >= 0 ;
subject to Budget: sum{i in 1..nAssets} weights[i] = 1 ;
subject to Scenarios{k in 1..nScenarios}: -VaR + z[k] + sum{i in 1..nAssets} Data[k,i]*weights[i] >= 0 ;
subject to Z{i in 1..nScenarios}:  z[i] >= 0 ;
